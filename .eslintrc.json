{
    "root": true,
    "env": {
        "browser": true,
        "es2021": true,
        "node": true,
        "es6": true
    },
    "extends": [
        "airbnb",
        "airbnb-typescript",
        "airbnb/hooks",
        "plugin:@typescript-eslint/recommended",
        "plugin:jsx-a11y/recommended",
        "plugin:react/jsx-runtime",
        "plugin:prettier/recommended",
        "prettier" // make sure this is always the last element in the array.
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": "latest",
        "project": "./tsconfig.json",
        "sourceType": "module"
    },
    "plugins": [
        "jsx-a11y",
        "import",
        "sort-keys-fix",
        "react-hooks",
        "@typescript-eslint",
        "prettier"
    ],
    "globals": {
        "JSX": "readonly"
    },
    "settings": {
        "react": {
            "version": "detect"
        },
        "import/parsers": {
            "@typescript-eslint/parser": [".ts", ".tsx"]
        },
        "import/resolver": {
            "node": {
                "extensions": [".js", ".jsx", ".ts", ".tsx"]
            },
            "typescript": {
                "alwaysTryTypes": true,
                // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
                "project": ["tsconfig.json"]
            }
        }
    },
    "rules": {
        "react/jsx-props-no-spreading": "off",
        "no-alert": "error",
        "no-console": "error",
        "react/require-default-props": "off",
        "react-hooks/rules-of-hooks": "error",
        "prettier/prettier": [
            "warn",
            {},
            {
                "properties": {
                    "usePrettierrc": true
                }
            }
        ],
        "import/order": [
            "warn",
            {
                "groups": [
                    "builtin",
                    "external",
                    "internal",
                    "parent",
                    "sibling",
                    "index",
                    "object"
                ],
                "newlines-between": "always",
                "alphabetize": {
                    "order": "asc",
                    "caseInsensitive": true
                }
            }
        ],
        "import/named": "error",
        "import/default": "error",
        "import/export": "error",
        "import/no-named-as-default": "warn",
        "import/no-duplicates": "error",
        "sort-keys-fix/sort-keys-fix": "warn",
        "@import/no-named-as-default-member": "off",
        "@typescript-eslint/consistent-type-imports": "warn",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/ban-types": "off",
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/no-empty-function": "off",
        "import/no-extraneous-dependencies": [
            "error",
            {
                "devDependencies": [
                    "**/mocks/**",
                    "**/setupTests.ts",
                    "**/testUtils.tsx",
                    "vite.config.ts",
                    "test.{ts,tsx}", // repos with a single test file
                    "test-*.{ts,tsx}", // repos with multiple top-level test files
                    "**/*{.,_}{test,spec}.{ts,tsx}" // tests where the extension or filename suffix denotes that it is a test
                ],
                "optionalDependencies": false
            }
        ],
        "@typescript-eslint/no-unused-vars": [
            "error",
            {
                "argsIgnorePattern": "^_"
            }
        ]
    },
    "ignorePatterns": [],
    "overrides": [
        {
            "files": ["*.js"],
            "rules": {
                "@typescript-eslint/explicit-module-boundary-types": ["off"],
                "@typescript-eslint/no-var-requires": ["off"]
            }
        },
        {
            // feel free to replace with your preferred file pattern - eg. 'src/**/*Slice.ts'
            "files": ["src/**/*Slice.ts"],
            // avoid state param assignment
            "rules": { "no-param-reassign": ["error", { "props": false }] }
        }
    ]
}
